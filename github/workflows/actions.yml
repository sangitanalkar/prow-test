# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  testactions_job:
    runs-on: ubuntu-latest
    name: A job to test the multi architecture action
    steps:
    - name: Run some commands on s390x
      id: runcmd
      uses: uraimo/run-on-arch-action@master
      with:
        architecture: s390x
        distribution: ubuntu18.04
        run: |
          apt update
          apt install -y build-essential
          uname -a > output.txt
          echo | gcc -v -E - 2>&1 | grep cc1 >> output.txt
          lscpu | grep "Model name:" | sed -r 's/Model name:\s{1,}//g' >> output.txt
          cat /proc/meminfo | grep MemTotal | sed -r 's/MemTotal:\s{1,}//g' >> output.txt
          echo ::set-output name=uname::$(uname -a)
          echo ::set-output name=cctarget::$(echo | gcc -v -E - 2>&1 | grep cc1)
          echo ::set-output name=cpuname::$(lscpu | grep "Model name:" | sed -r 's/Model name:\s{1,}//g')
          echo ::set-output name=memtotal::$(cat /proc/meminfo | grep MemTotal | sed -r 's/MemTotal:\s{1,}//g')
    - name: Get the output
      run: |
        echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
        echo "The gcc parameters were ${{ steps.runcmd.outputs.cctarget }}"
        echo "The cpu name was ${{ steps.runcmd.outputs.cpuname }}"
        echo "The total memory was ${{ steps.runcmd.outputs.memtotal }}"
        cat output.txt
